# This workflow will build a Java project with Maven and then review its
# source code with CodeQL.  Our use of Maven will include caching/restoring
# any dependencies to improve the workflow execution time.
#
# For more information see:
#
#   https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

# On the following events, we'll execute the jobs that are below
#
on:
  # If there is a push to our "develop" branch...
  #
  push:
    branches: [ "develop" ]
    
  # Or, if there is a pull request sent to the target repository...
  #
  pull_request:
    branches: [ "develop" ]

jobs:
  # Build our code!
  #
  build:
    # Setup an Ubuntu "runner" (a VM [not a container] provisioned on the
    # fly by GitHub) to execute our build job
    #
    runs-on: ubuntu-latest

    # Undertake the following steps to carry out the build
    #
    steps:
    # Checkout our code...
    #
    - uses: actions/checkout@v3
    
    # Setup JDK 17 on our runner.  Turn on caching via Maven
    #
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17      
        distribution: 'temurin'
        cache: maven
    
    # Setup CodeQL so that we can run static application security
    # testing (i.e., review our source code for any trouble spots).
    #
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java, javascript
    
    # Use the Maven tool to build our Java code
    #
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Analyze our code with CodeQL
    #
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
